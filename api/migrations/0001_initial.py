# Generated by Django 4.1.3 on 2023-12-23 09:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='convo_agent', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='convo_customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DistanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_per_km', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_files/')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=200)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=200)),
                ('attachment', models.FileField(blank=True, upload_to='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.conversation')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='ErrandTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('state_within', models.CharField(blank=True, max_length=100, null=True)),
                ('pick_up_address', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_up_lat', models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True)),
                ('pick_up_long', models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True)),
                ('drop_off_address', models.CharField(blank=True, max_length=255, null=True)),
                ('drop_off_lat', models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True)),
                ('drop_off_long', models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True)),
                ('recipient_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('sender_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('grocery_list', models.TextField(blank=True, null=True)),
                ('grocery_estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('describe_errand', models.TextField(blank=True, null=True)),
                ('how_long', models.PositiveIntegerField(blank=True, null=True)),
                ('time_cap', models.CharField(blank=True, choices=[('HOURS', 'HOURS'), ('DAYS', 'DAYS'), ('MONTHS', 'MONTHS')], max_length=100, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('REQUESTED', 'REQUESTED'), ('REJECTED', 'REJECTED'), ('ACCEPTED', 'ACCEPTED'), ('ARRIVED', 'ARRIVED'), ('STARTED', 'STARTED'), ('IN_PROGRESS', 'IN_PROGRESS'), ('COMPLETED', 'COMPLETED'), ('PICKED_UP', 'PICKED_UP')], default='REQUESTED', max_length=20)),
                ('user_cancelled', models.BooleanField(default=False)),
                ('estimated_pick_up_time', models.CharField(blank=True, max_length=200, null=True)),
                ('estimated_drop_off_time', models.CharField(blank=True, max_length=200, null=True)),
                ('distance_in_km', models.FloatField(blank=True, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='errands_as_agent', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='errands_as_customer', to=settings.AUTH_USER_MODEL)),
                ('files', models.ManyToManyField(blank=True, null=True, to='api.file')),
                ('rejected_agents', models.ManyToManyField(blank=True, null=True, related_name='errands_rejected', to=settings.AUTH_USER_MODEL)),
                ('subtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subtype')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.vehiclemetric')),
            ],
        ),
        migrations.CreateModel(
            name='Earnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.wallet')),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='errand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.errandtask', unique=True),
        ),
    ]
